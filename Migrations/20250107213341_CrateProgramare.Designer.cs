// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonBellissima.Data;

#nullable disable

namespace SalonBellissima.Migrations
{
    [DbContext(typeof(SalonBellissimaContext))]
    [Migration("20250107213341_CrateProgramare")]
    partial class CrateProgramare
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalonBellissima.Models.Angajat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Angajat");
                });

            modelBuilder.Entity("SalonBellissima.Models.AngajatAsociat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AngajatID")
                        .HasColumnType("int");

                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AngajatID");

                    b.HasIndex("ServiciuID");

                    b.ToTable("AngajatAsociat");
                });

            modelBuilder.Entity("SalonBellissima.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DenumireCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("SalonBellissima.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("SalonBellissima.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataProgramare")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiciuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ServiciuID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("SalonBellissima.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("SalonBellissima.Models.AngajatAsociat", b =>
                {
                    b.HasOne("SalonBellissima.Models.Angajat", "Angajat")
                        .WithMany("AngajatiAsociati")
                        .HasForeignKey("AngajatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonBellissima.Models.Serviciu", "Serviciu")
                        .WithMany("AngajatiAsociati")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Angajat");

                    b.Navigation("Serviciu");
                });

            modelBuilder.Entity("SalonBellissima.Models.Programare", b =>
                {
                    b.HasOne("SalonBellissima.Models.Client", "Client")
                        .WithMany("Programari")
                        .HasForeignKey("ClientID");

                    b.HasOne("SalonBellissima.Models.Serviciu", "Servciu")
                        .WithMany("Programari")
                        .HasForeignKey("ServiciuID");

                    b.Navigation("Client");

                    b.Navigation("Servciu");
                });

            modelBuilder.Entity("SalonBellissima.Models.Serviciu", b =>
                {
                    b.HasOne("SalonBellissima.Models.Categorie", "Categorie")
                        .WithMany("Servicii")
                        .HasForeignKey("CategorieID");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("SalonBellissima.Models.Angajat", b =>
                {
                    b.Navigation("AngajatiAsociati");
                });

            modelBuilder.Entity("SalonBellissima.Models.Categorie", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("SalonBellissima.Models.Client", b =>
                {
                    b.Navigation("Programari");
                });

            modelBuilder.Entity("SalonBellissima.Models.Serviciu", b =>
                {
                    b.Navigation("AngajatiAsociati");

                    b.Navigation("Programari");
                });
#pragma warning restore 612, 618
        }
    }
}
